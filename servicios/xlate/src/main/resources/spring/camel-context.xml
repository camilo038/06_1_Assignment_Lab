<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring        http://camel.apache.org/schema/spring/camel-spring.xsd  http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.8.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" id="jsonProvider"/>
    <bean class="co.com.entelgy.exceptions.ErrorExcepcionInterceptor" id="ErrorExcepcionInterceptor"/>
    <bean class="co.com.entelgy.processor.RespuestaErrorProcessor" id="respuestaErrorProcessor"/>
    <camel:errorHandler id="noErrorHandler" type="NoErrorHandler"/>
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
        <constructor-arg index="0" value="rh1"/>
    </bean>
    <bean class="co.com.entelgy.QuickstartConfiguration" id="prop"/>
    <ctx:property-placeholder location="classpath:application.properties"/>
    <bean class="org.apache.camel.component.jms.JmsComponent" id="jms">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${quickstart.urlBroker}"/>
                <property name="closeTimeout" value="${quickstart.TimeOutBroker}"/>
            </bean>
        </property>
    </bean>
    <bean class="org.apache.camel.component.gson.GsonDataFormat" id="gson">
        <!-- we want to unmarshal to person pojo -->
        <property name="unmarshalType" value="co.com.entelgy.model.RequestRest"/>
        <!-- we want to map fields to use lower case and underscores -->
        <property name="fieldNamingPolicy" value="LOWER_CASE_WITH_UNDERSCORES"/>
    </bean>
    <bean class="org.apache.camel.model.dataformat.JaxbDataFormat" id="myJaxb">
        <property name="prettyPrint" value="true"/>
        <property name="contextPath" value="co.com.entelgy.model.RequestRest"/>
    </bean>
    <camelContext id="CXF-SERVICE-inbound-API" streamCache="true"
        threadNamePattern="100" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="classpath:application.properties"/>
        <threadPoolProfile defaultProfile="true" id="changedProfile"
            maxQueueSize="100" poolSize="1"/>
        <redeliveryPolicyProfile id="redeliveryPolicy"
            logRetryAttempted="true" maximumRedeliveries="0"
            redeliveryDelay="10" retriesExhaustedLogLevel="WARN"/>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorProveedor}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorProveedor}}</simple>
            </setProperty>
            <setProperty propertyName="codigoTimeout">
                <simple>{{quickstart.codigo_ErrorTimeOut}}</simple>
            </setProperty>
            <setProperty propertyName="descripcionTimeout">
                <simple>{{quickstart.descripcion_ErrorTimeOut}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <stop/>
        </onException>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setProperty propertyName="codigohttp">
                <simple>{{quickstart.codigoRespuesta_ErrorGeneral}}</simple>
            </setProperty>
            <setProperty propertyName="codigo">
                <simple>{{quickstart.codigo_ErrorInterno}}</simple>
            </setProperty>
            <setProperty propertyName="descripcion">
                <simple>{{quickstart.descripcion_ErrorInterno}}</simple>
            </setProperty>
            <bean method="process" ref="respuestaErrorProcessor"/>
            <to pattern="InOnly" uri="jms:q.empi.nextgate.dql"/>
            <stop/>
        </onException>
        <route id="ROUTE-MAIN">
            <from id="_from1" uri="jms:q.empi.deim.in "/>
            <to id="_toD1" uri="direct:inPojo"/>
        </route>
        <route id="_route1">
            <from id="_from3" uri="direct:inPojo"/>
            <log id="_log1" loggerRef="rh1" message="===== ${body}"/>
            <unmarshal id="_unmarshal1">
                <camel:jacksonxml allowJmsType="true" unmarshalTypeName="co.com.entelgy.client.Person"/>
            </unmarshal>
            <log id="_log2" loggerRef="rh1" message="TO  POJO______${body}"/>
            <to id="_to1" uri="direct:untoxml"/>
        </route>
        <route id="trasn">
            <from id="_from2" uri="direct:untoxml"/>
            <marshal id="_marshal1">
                <camel:jacksonxml allowJmsType="true" unmarshalTypeName="co.com.entelgy.client.NewPerson"/>
            </marshal>
            <log id="_log3" message=":::::${body}"/>
                        <to id="_to3" pattern="InOnly" uri="jms:q.empi.deim.out"/>
        </route>
    </camelContext>
</beans>
