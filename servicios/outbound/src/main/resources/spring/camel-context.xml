<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring        http://camel.apache.org/schema/spring/camel-spring.xsd  http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.8.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <camel:errorHandler id="noErrorHandler" type="NoErrorHandler"/>
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="rh1">
        <constructor-arg index="0" value="rh1"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsComponent" id="jms">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${quickstart.urlBroker}"/>
                <property name="closeTimeout" value="${quickstart.TimeOutBroker}"/>
            </bean>
        </property>
    </bean>
    <ctx:property-placeholder location="classpath:application.properties"/>
    <cxf:cxfEndpoint address="{{cxf.path}}"
        endpointName="a:TestWebServiceImplPort" id="CXFTest"
        serviceClass="com.intelgy.services.TestWebService"
        serviceName="a:TestWebServiceImplService"
        wsdlURL="/wsdl/validador.wsdl" xmlns:a="http://services.intelgy.com/"/>
    <camelContext id="camel" streamCache="true" threadNamePattern="100" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="classpath:application.properties"/>
        <threadPoolProfile defaultProfile="true" id="changedProfile"
            maxQueueSize="100" poolSize="3"/>
        <redeliveryPolicyProfile id="redeliveryPolicy"
            logRetryAttempted="true" maximumRedeliveries="3"
            redeliveryDelay="10" retriesExhaustedLogLevel="WARN"/>
        <onException id="CustomExceptionHandling"
            redeliveryPolicyRef="redeliveryPolicy" useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log loggerRef="rh1" loggingLevel="ERROR" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}} || ${exception.message}"/>
            <log loggerRef="rh1" loggingLevel="DEBUG" message="ERROR: ${camelId} || ${routeId} || ${id} || ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} || ${exception.stacktrace}"/>
            <setHeader headerName="trazaerror">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <to pattern="InOnly" uri="jms:q.empi.nextgate.dql"/>
            <stop/>
        </onException>
        <route id="simple-route">
            <!--             <from id="route-timer" uri="timer://foo?period=1000"/> -->
            <from id="_from1" uri="file:int?noop=true"/>
            <!--             <from id="_from2"   uri="jms:q.empi.deim.out"/> -->
            <log id="_log3" message="IN JMS  ${body}"/>
            <to id="_to2" uri="direct:soapdemo"/>
        </route>
        <route id="_route1">
            <from id="_from1" uri="direct:soapdemo"/>
            <setHeader headerName="idcc" id="_setHeader1">
                <xpath resultType="String">//person/idcc/text()</xpath>
            </setHeader>
            <setHeader headerName="lastName" id="_setHeader2">
                <xpath resultType="String">//person/lastName/text()</xpath>
            </setHeader>
            <setHeader headerName="name" id="_setHeader4">
                <xpath resultType="String">//person/name/text()</xpath>
            </setHeader>
            <log id="_log1" message="Result  ${header.idcc}===  ${header.lastName}=== ${header.name}"/>
            <setHeader headerName="CamelHttpMethod" id="_setHeader3">
                <constant>POST</constant>
            </setHeader>
            <to id="_to3" uri="velocity:template/formater.vm"/>
            <log id="_log2" loggerRef="rh1" loggingLevel="INFO" message="Request Soap::::::${body}"/>
            <!--             <to id="_to4" uri="http4://localhost:8081/ws"/> -->
            <to id="_to4" uri="http4://{{quickstart.urlEndpoint_servie}}"/>
            <log id="_log2" loggerRef="rh1" loggingLevel="INFO" message="::::Respuesta Soap::::::${body}"/>
        </route>
    </camelContext>
</beans>
